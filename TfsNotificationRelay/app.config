<?xml version="1.0" encoding="utf-8"?>
<configuration>
  <configSections>
    <section name="tfsNotificationRelay" type="DevCore.TfsNotificationRelay.Configuration.TfsNotificationRelaySection, DevCore.TfsNotificationRelay" requirePermission="false" />
  </configSections>
  <tfsNotificationRelay xmlns="http://tempuri.org/TfsNotificationRelaySection.xsd"
               xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
               xsi:noNamespaceSchemaLocation="TfsNotificationRelay.xsd">
    <!--
      If identifyForcePush is set, the entire graph might be traversed while checking ancestry. 
      If you have a huge repository and are experiencing performance issues, disable identifyForcePush.
      -->
    <settings
      logfile=""
      stripUserDomain="true"
      commentMaxLength="72"
      discussionCommentMaxLength="400"
      maxLines="10"
      hashLength="7"
      identifyForcePush="true"
        />
    <bots>
      <!--
        Multiple bots can be added here, just make sure they have a unique id.
        -->
      <bot id="slack" type="DevCore.TfsNotificationRelay.Slack.SlackNotifier, DevCore.TfsNotificationRelay.Slack" textId="slacktext" userMapId="slackusers">
        <botSettings>
          <add name="webhookUrl" value="" />
          <add name="channels" value="#general" /> <!-- one or many comma-separated channels -->
          <add name="username" value="tfsbot" />
          <add name="iconEmoji" value="" />
          <add name="iconUrl" value="https://raw.githubusercontent.com/kria/TfsNotificationRelay/master/tfsicon.png" />
          <add name="standardColor" value="#68217a" />
          <add name="successColor" value="#1cb841" />
          <add name="errorColor" value="#ca3c3c" />
          <add name="wiCreatedDisplayFields" value="System.AreaPath, System.IterationPath, System.State, System.Reason, System.AssignedTo"/>
          <add name="wiChangedDisplayFields" value="System.AreaPath, System.IterationPath, System.State, System.Reason, System.AssignedTo"/>
        </botSettings>
        <eventRules>
          <!--
            Multiple event rules can be added here. 
            The notify attribute of the first (top to bottom) rule that matches, will determine whether a notification is sent or not.
            If no rule matches, no notification will be sent.
            
            The events attribute takes a comma-separated list of: 
              None, GitPush, BuildCompleted, BuildQualityChanged, ProjectCreated, ProjectDeleted, RepositoryCreated, Checkin, 
              WorkItemCreated, WorkItemChanged, WorkItemComment, PullRequestCreated, PullRequestStatusUpdate, PullRequestReviewerVote, 
              GitCommitComment, PullRequestComment, ChangesetComment, All
            
            teamProjectCollection, teamProject, teamName, gitRepository, areaPath, workItemType, sourcePath and buildDefinition attributes take regex patterns.
            workItemfields takes a comma-separated list of field reference names. See https://msdn.microsoft.com/en-us/library/ms194971.aspx
            buildStatuses takes a comma-separated list of: None, InProgress, Succeeded, PartiallySucceeded, Failed, Stopped, NotStarted, All
            
            For more info see the wiki at https://github.com/kria/TfsNotificationRelay/wiki
            -->
          <rule notify="true" events="All" teamProjectCollection="" teamProject="" teamName="" gitRepository="" gitBranch="" gitTag="" areaPath="" workItemType="" workItemfields="System.State, System.AssignedTo" sourcePath="" buildDefinition="" buildStatuses="All" />
        </eventRules>
      </bot>
      
      <!--
        This bot uses the basedOn attribute to inherit all settings from another bot and override the channels setting.
        If inheritRules attribute (false by default) is true, rules will also be inherited. Ancestor rules have higher priority. 
      -->
      <!--
      <bot id="slack-buildfail" basedOn="slack" inheritRules="false">
        <botSettings>
          <add name="channels" value="#buildfail" />
        </botSettings>
        <eventRules>
          <rule notify="true" events="BuildCompleted" buildStatuses="Failed" />
        </eventRules>
      </bot>
      -->
      
      <!--
      <bot id="slackdm" type="DevCore.TfsNotificationRelay.Slack.DirectMessageNotifier, DevCore.TfsNotificationRelay.Slack" textId="slacktext" userMapId="slackusers">
        <botSettings>
          <add name="token" value="" />
          <add name="standardColor" value="#68217a" />
          <add name="successColor" value="#1cb841" />
          <add name="errorColor" value="#ca3c3c" />
          <add name="wiCreatedDisplayFields" value="System.AreaPath, System.IterationPath, System.State, System.Reason, System.AssignedTo"/>
          <add name="wiChangedDisplayFields" value="System.AreaPath, System.IterationPath, System.State, System.Reason, System.AssignedTo"/>
        </botSettings>
        <eventRules>
          <rule notify="true" events="All" teamProjectCollection="" teamProject="" teamName="" gitRepository="" gitBranch="" gitTag="" areaPath="" workItemType="" workItemfields="System.State, System.AssignedTo" sourcePath="" buildDefinition="" buildStatuses="All" />
        </eventRules>
      </bot>
      -->
      
      <!--
      <bot id="hipChat" type="DevCore.TfsNotificationRelay.HipChat.HipChatNotifier, DevCore.TfsNotificationRelay.HipChat" textId="htmltext">
        <botSettings>
          <add name="apiBaseUrl" value="https://api.hipchat.com/v2" />
          <add name="roomNotificationToken" value="" />
          <add name="room" value="TFS" />
          <add name="standardColor" value="purple" />
          <add name="successColor" value="green" />
          <add name="errorColor" value="red" />
          <add name="notify" value="false" />
          <add name="messageFormat" value="html" />
        </botSettings>
        <eventRules>
          <rule notify="true" events="All" teamProjectCollection="" teamProject="" teamName="" gitRepository="" gitBranch="" gitTag="" areaPath="" workItemType="" workItemfields="System.State, System.AssignedTo" sourcePath="" buildDefinition="" buildStatuses="All" />
        </eventRules>
      </bot>
      -->
      
      <!--
      <bot id="irc" type="DevCore.TfsBot.TfsSubscriber.IrcNotifier, DevCore.TfsBot.TfsSubscriber" textId="plaintext">
        <botSettings>
          <add name="serviceEndpoint" value="net.pipe://localhost/BotService" />
        </botSettings>
        <eventRules>
          <rule notify="true" events="All" teamProjectCollection="" teamProject="" teamName="" gitRepository="" gitBranch="" gitTag="" areaPath="" workItemType="" workItemfields="System.State, System.AssignedTo" sourcePath="" buildDefinition="" buildStatuses="All" />
        </eventRules>
      </bot>
      -->
    </bots>
    <texts>
      <text id="slacktext"
        pushFormat="{userName} {pushed} to &lt;{repoUri}|{projectName}/{repoName}&gt;"
        pushed="pushed"
        forcePushed="force-pushed"
        commit="commit"
        refPointer="-&gt;"
        deleted="deleted"
        commitFormat="{action} &lt;{commitUri}|{commitId}&gt; ({changeCounts}) {authorTime} {authorName} - *{comment}*"
        branchFormat="`[{name}]`"
        tagFormat="`{{{name}}}`"
        refSeparator=" "
        linesSupressedFormat="{count} more line(s) suppressed."
        dateTimeFormat=""
        timeSpanFormat=""
        buildFormat="Build ({buildReason}) &lt;{buildUrl}|{projectName}/{buildDefinition}-{buildNumber}&gt; triggered by {userName} ({buildDuration})."
        buildQualityChangedFormat="Build Quality of &lt;{buildUrl}|{projectName}/{buildNumber}&gt; changed from `{oldValue}` to `{newValue}`."
        buildQualityNotSet="Not Set"
        projectCreatedFormat="Team Project &lt;{projectUrl}|{projectName}&gt; created."
        projectDeletedFormat="Team Project {projectName} deleted."
        checkinFormat="{userName} checked in &lt;{changesetUrl}|Changeset {changesetId}&gt; to {projectLinks} - *{comment}*"
        projectLinkFormat="&lt;{projectUrl}|{projectName}&gt;"
        changeCountAddFormat="{count}a"
        changeCountDeleteFormat="{count}d"
        changeCountEditFormat="{count}e"
        changeCountRenameFormat="{count}r"
        changeCountSourceRenameFormat="{count}sr"
        changeCountUnknownFormat="{count}u"
        workItemchangedFormat="{userName} {action} &lt;{wiUrl}|{projectName}/{wiType} #{wiId}&gt; - {wiTitle}"
        workItemFieldTransitionFormat="{oldValue} -&gt; {newValue}"
        pullRequestCreatedFormat="{userName} created &lt;{prUrl}|pull request #{prId}&gt; in &lt;{repoUri}|{projectName}/{repoName}&gt; - {prTitle}"
        pullRequestStatusUpdateFormat="{userName} {action} &lt;{prUrl}|pull request #{prId}&gt; in &lt;{repoUri}|{projectName}/{repoName}&gt; - {prTitle}"
        pullRequestReviewerVoteFormat="{userName} {action} &lt;{prUrl}|pull request #{prId}&gt; in &lt;{repoUri}|{projectName}/{repoName}&gt; - {prTitle}"
        updated="updated"
        created="created"
        commentedOn="commented on"
        comment="Comment"
        voteApproved="approved the changes in"
        voteRejected="rejected the changes in"
        voteRescinded="rescinded their feedback for"
        completed="completed"
        abandoned="abandoned"
        reactivated="reactivated"
        state="State"
        assignedTo="Assigned To"
        repositoryCreatedFormat="{userName} created repository &lt;{repoUri}|{projectName}/{repoName}&gt;"
        commitCommentFormat="{userName} commented on &lt;{commitUri}|{commitId}&gt; in &lt;{repoUri}|{projectName}/{repoName}&gt;"
        pullRequestCommentFormat="{userName} commented on &lt;{prUrl}|pull request #{prId}&gt; in &lt;{repoUri}|{projectName}/{repoName}&gt; - {prTitle} by &lt;@{CreatorUserId}&gt;"
        changesetCommentFormat="{userName} commented on &lt;{changesetUrl}|Changeset {changesetId}&gt; in &lt;{projectUrl}|{projectName}&gt;"
          />
      <text id="htmltext"
        pushFormat="{userName} {pushed} to &lt;a href=&quot;{repoUri}&quot;&gt;{projectName}/{repoName}&lt;/a&gt;"
        pushed="pushed"
        forcePushed="force-pushed"
        commit="commit"
        refPointer="-&gt;"
        deleted="deleted"
        commitFormat="{action} &lt;a href=&quot;{commitUri}&quot;&gt;{commitId}&lt;/a&gt; ({changeCounts}) {authorTime} {authorName} - &lt;strong&gt;{comment}&lt;/strong&gt;"
        branchFormat="[{name}]"
        tagFormat="{{{name}}}"
        refSeparator=""
        linesSupressedFormat="{count} more line(s) suppressed."
        dateTimeFormat=""
        timeSpanFormat=""
        buildFormat="Build ({buildReason}) &lt;a href=&quot;{buildUrl}&quot;&gt;{projectName}/{buildDefinition}-{buildNumber}&lt;/a&gt; triggered by {userName} ({buildDuration})."
        buildQualityChangedFormat="Build Quality of &lt;a href=&quot;{buildUrl}&quot;&gt;{projectName}/{buildNumber}&lt;/a&gt; changed from &lt;strong&gt;{oldValue}&lt;/strong&gt; to &lt;strong&gt;{newValue}&lt;/strong&gt;."
        buildQualityNotSet="Not Set"
        projectCreatedFormat="Team Project &lt;a href=&quot;{projectUrl}&quot;&gt;{projectName}&lt;/a&gt; created."
        projectDeletedFormat="Team Project {projectName} deleted."
        checkinFormat="{userName} checked in &lt;a href=&quot;{changesetUrl}&quot;&gt;Changeset {changesetId}&lt;/a&gt; to {projectLinks} - &lt;strong&gt;{comment}&lt;/strong&gt;"
        projectLinkFormat="&lt;a href=&quot;{projectUrl}&quot;&gt;{projectName}&lt;/a&gt;"
        changeCountAddFormat="{count}a"
        changeCountDeleteFormat="{count}d"
        changeCountEditFormat="{count}e"
        changeCountRenameFormat="{count}r"
        changeCountSourceRenameFormat="{count}sr"
        changeCountUnknownFormat="{count}u"
        workItemchangedFormat="{userName} {action} &lt;a href=&quot;{wiUrl}&quot;&gt;{projectName}/{wiType} #{wiId}&lt;/a&gt; - {wiTitle}"
        workItemFieldTransitionFormat="{oldValue} -&gt; {newValue}"
        pullRequestCreatedFormat="{userName} created &lt;a href=&quot;{prUrl}&quot;&gt;pull request #{prId}&lt;/a&gt; in &lt;a href=&quot;{repoUri}&quot;&gt;{projectName}/{repoName}&lt;/a&gt; - {prTitle}"
        pullRequestStatusUpdateFormat="{userName} {action} &lt;a href=&quot;{prUrl}&quot;&gt;pull request #{prId}&lt;/a&gt; in &lt;a href=&quot;{repoUri}&quot;&gt;{projectName}/{repoName}&lt;/a&gt; - {prTitle}"
        pullRequestReviewerVoteFormat="{userName} {action} &lt;a href=&quot;{prUrl}&quot;&gt;pull request #{prId}&lt;/a&gt; in &lt;a href=&quot;{repoUri}&quot;&gt;{projectName}/{repoName}&lt;/a&gt; - {prTitle}"
        updated="updated"
        created="created"
        commentedOn="commented on"
        comment="Comment"
        voteApproved="approved the changes in"
        voteRejected="rejected the changes in"
        voteRescinded="rescinded their feedback for"
        completed="completed"
        abandoned="abandoned"
        reactivated="reactivated"
        state="State"
        assignedTo="Assigned To"
        repositoryCreatedFormat="{userName} created repository &lt;a href=&quot;{repoUri}&quot;&gt;{projectName}/{repoName}&lt;/a&gt;"
        commitCommentFormat="{userName} commented on &lt;a href=&quot;{commitUri}&quot;&gt;{commitId}&lt;/a&gt; in &lt;a href=&quot;{repoUri}&quot;&gt;{projectName}/{repoName}&lt;/a&gt;"
        pullRequestCommentFormat="{userName} commented on &lt;a href=&quot;{prUrl}&quot;&gt;pull request #{prId}&lt;/a&gt; in &lt;a href=&quot;{repoUri}&quot;&gt;{projectName}/{repoName}&lt;/a&gt; - {prTitle}"
        changesetCommentFormat="{userName} commented on &lt;a href=&quot;{changesetUrl}&quot;&gt;Changeset {changesetId}&lt;/a&gt; in &lt;a href=&quot;{projectUrl}&quot;&gt;{projectName}&lt;/a&gt;"
          />
      <text id="plaintext"
        pushFormat="{userName} {pushed} to {projectName}/{repoName}"
        pushed="pushed"
        forcePushed="force-pushed"
        commit="commit"
        refPointer="-&gt;"
        deleted="deleted"
        commitFormat="{action} {commitId} ({changeCounts}) {authorTime} {authorName} - {comment}"
        branchFormat="[{name}]"
        tagFormat="{{{name}}}"
        refSeparator=""
        linesSupressedFormat="{count} more line(s) suppressed."
        dateTimeFormat=""
        timeSpanFormat=""
        buildFormat="Build ({buildReason}) {projectName}/{buildDefinition}-{buildNumber} triggered by {userName} ({buildDuration})."
        buildQualityChangedFormat="Build Quality of {projectName}/{buildNumber} changed from {oldValue} to {newValue}."
        buildQualityNotSet="Not Set"
        projectCreatedFormat="Team Project {projectName} created."
        projectDeletedFormat="Team Project {projectName} deleted."
        checkinFormat="{userName} checked in Changeset {changesetId} to {projectLinks} - {comment}"
        projectLinkFormat="{projectName}"
        changeCountAddFormat="{count}a"
        changeCountDeleteFormat="{count}d"
        changeCountEditFormat="{count}e"
        changeCountRenameFormat="{count}r"
        changeCountSourceRenameFormat="{count}sr"
        changeCountUnknownFormat="{count}u"
        workItemchangedFormat="{userName} {action} {projectName}/{wiType} #{wiId} - {wiTitle}"
        workItemFieldTransitionFormat="{oldValue} -&gt; {newValue}"
        pullRequestCreatedFormat="{userName} created pull request #{prId} in {projectName}/{repoName} - {prTitle}"
        pullRequestStatusUpdateFormat="{userName} {action} pull request #{prId} in {projectName}/{repoName} - {prTitle}"
        pullRequestReviewerVoteFormat="{userName} {action} pull request #{prId} in {projectName}/{repoName} - {prTitle}"
        updated="updated"
        created="created"
        commentedOn="commented on"
        comment="Comment"
        voteApproved="approved the changes in"
        voteRejected="rejected the changes in"
        voteRescinded="rescinded their feedback for"
        completed="completed"
        abandoned="abandoned"
        reactivated="reactivated"
        state="State"
        assignedTo="Assigned To"
        repositoryCreatedFormat="{userName} created repository {projectName}/{repoName}"
        commitCommentFormat="{userName} commented on {commitId} in {projectName}/{repoName}"
        pullRequestCommentFormat="{userName} commented on pull request #{prId} in {projectName}/{repoName} - {prTitle}"
        changesetCommentFormat="{userName} commented on Changeset {changesetId} in {projectName}"
          />
    </texts>
    <userMaps>
      <userMap id="slackusers">
        <add tfsUser="MYDOMAIN\kria" mappedUser="UXXXXXXXX" />
      </userMap>
    </userMaps>
  </tfsNotificationRelay>
  
  <runtime>
    <assemblyBinding xmlns="urn:schemas-microsoft-com:asm.v1">
      <dependentAssembly>
        <assemblyIdentity name="Newtonsoft.Json" publicKeyToken="30ad4fe6b2a6aeed" culture="neutral" />
        <bindingRedirect oldVersion="0.0.0.0-6.0.0.0" newVersion="6.0.0.0" />
      </dependentAssembly>
    </assemblyBinding>
  </runtime>
</configuration>
